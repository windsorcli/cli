name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Aqua
        uses: aquaproj/aqua-installer@f13c5d2f0357708d85477aabe50fd3f725528745 # v3.1.0
        with:
          aqua_version: v2.42.2

      - name: Install tools using Aqua
        run: aqua install

      - name: Install Windsor CLI from Main Branch
        shell: bash
        run: |
          git clone https://github.com/windsorcli/cli.git
          cd cli/cmd/windsor
          go build -o windsor
          chmod +x windsor
          echo "windsor version"
          ./windsor version

      - name: Echo the current path (Linux/MacOS)
        if: runner.os != 'Windows'
        run: |
          echo "PATH ($PATH)"

      - name: Echo the current path (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "PATH ($env:PATH)"

      - name: Echo the current GITHUB_PATH (Linux/MacOS)
        if: runner.os != 'Windows'
        run: |
          echo "GITHUB_PATH ($GITHUB_PATH)"

      - name: Echo the current GITHUB_PATH (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "GITHUB_PATH ($env:GITHUB_PATH)"

      - name: Add windsor to the path (Linux/MacOS)
        if: runner.os != 'Windows'
        run: |
          echo "$(pwd)/cli/cmd/windsor" >> $GITHUB_PATH

      - name: Add windsor to the path (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $env:PATH += ";$(pwd)\\cli\\cmd\\windsor"
          Add-Content -Path $env:GITHUB_PATH -Value "$(pwd)/cli/cmd/windsor"
  
      - name: Run tests
        run: task test

  sast-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: '1.23.1'
          check-latest: true

      - name: Run Gosec Security Scanner
        uses: securego/gosec@e0cca6fe95306b7e7790d6f1bf6a7bec6d622459 # v2.22.0
        with:
          args: ./...
        env:
          GOTOOLCHAIN: 'local'
          GOFLAGS: '-buildvcs=false'
