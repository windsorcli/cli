name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      
permissions:
  contents: write  # Allows creating releases
  issues: read
  pull-requests: read
            
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Aqua
        uses: aquaproj/aqua-installer@f13c5d2f0357708d85477aabe50fd3f725528745 # v3.1.0
        with:
          aqua_version: v2.42.2

      - name: Install tools
        run: aqua install

      - name: Cache Go Modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
  
      - name: Install Dependencies
        run: go install ./...

      - name: Install Windsor CLI from main branch
        shell: bash
        run: |
          git clone https://github.com/windsorcli/cli.git
          cd cli/cmd/windsor
          go build -o windsor
          chmod +x windsor
          ./windsor version
  
      - name: Run tests
        run: task test

  sast-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Aqua
        uses: aquaproj/aqua-installer@f13c5d2f0357708d85477aabe50fd3f725528745 # v3.1.0
        with:
          aqua_version: v2.42.1

      - name: Install tools
        run: aqua install

      - name: Cache Go Modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
  
      - name: Install Dependencies
        run: go install ./...

      - name: Run Gosec Security Scanner
        uses: securego/gosec@e0cca6fe95306b7e7790d6f1bf6a7bec6d622459 # v2.22.0
        with:
          args: ./...
        env:
          GOTOOLCHAIN: 'local'
          GOFLAGS: '-buildvcs=false'

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Aqua
        uses: aquaproj/aqua-installer@f13c5d2f0357708d85477aabe50fd3f725528745 # v3.1.0
        with:
          aqua_version: v2.40.0

      - name: Install tools
        run: aqua install

      - name: Cache Go Modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
  
      - name: Install Dependencies
        run: go install ./...

      - name: Import GPG key
        id: import_gpg  # Add an ID to the step to reference its outputs
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --edit-key $(gpg --list-keys --with-colons | grep fpr | head -n 1 | cut -d: -f10) trust quit
          # Capture the GPG fingerprint
          fingerprint=$(gpg --list-keys --with-colons | grep fpr | head -n 1 | cut -d: -f10)
          echo "GPG_FINGERPRINT=$fingerprint" >> $GITHUB_ENV

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@a167e697a0334766bd4085b38508406ab9528b1b # v2.5.1
        with:
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ env.GPG_FINGERPRINT }}
          HOMEBREW_CLI_WRITE_PAT: ${{ secrets.HOMEBREW_CLI_WRITE_PAT }}
